// Generated by view binder compiler. Do not edit!
package com.example.agripricechecker.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.agripricechecker.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityFetchPriceBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageButton clearCropBtn;

  @NonNull
  public final AutoCompleteTextView cropName;

  @NonNull
  public final Button fetchBtn;

  @NonNull
  public final LinearLayout fetchPriceLayout;

  @NonNull
  public final TextView fetchTitle;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final Spinner typeSpinner;

  private ActivityFetchPriceBinding(@NonNull LinearLayout rootView,
      @NonNull ImageButton clearCropBtn, @NonNull AutoCompleteTextView cropName,
      @NonNull Button fetchBtn, @NonNull LinearLayout fetchPriceLayout,
      @NonNull TextView fetchTitle, @NonNull RecyclerView recyclerView,
      @NonNull Spinner typeSpinner) {
    this.rootView = rootView;
    this.clearCropBtn = clearCropBtn;
    this.cropName = cropName;
    this.fetchBtn = fetchBtn;
    this.fetchPriceLayout = fetchPriceLayout;
    this.fetchTitle = fetchTitle;
    this.recyclerView = recyclerView;
    this.typeSpinner = typeSpinner;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityFetchPriceBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityFetchPriceBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_fetch_price, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityFetchPriceBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.clearCropBtn;
      ImageButton clearCropBtn = ViewBindings.findChildViewById(rootView, id);
      if (clearCropBtn == null) {
        break missingId;
      }

      id = R.id.cropName;
      AutoCompleteTextView cropName = ViewBindings.findChildViewById(rootView, id);
      if (cropName == null) {
        break missingId;
      }

      id = R.id.fetchBtn;
      Button fetchBtn = ViewBindings.findChildViewById(rootView, id);
      if (fetchBtn == null) {
        break missingId;
      }

      LinearLayout fetchPriceLayout = (LinearLayout) rootView;

      id = R.id.fetchTitle;
      TextView fetchTitle = ViewBindings.findChildViewById(rootView, id);
      if (fetchTitle == null) {
        break missingId;
      }

      id = R.id.recyclerView;
      RecyclerView recyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.typeSpinner;
      Spinner typeSpinner = ViewBindings.findChildViewById(rootView, id);
      if (typeSpinner == null) {
        break missingId;
      }

      return new ActivityFetchPriceBinding((LinearLayout) rootView, clearCropBtn, cropName,
          fetchBtn, fetchPriceLayout, fetchTitle, recyclerView, typeSpinner);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
